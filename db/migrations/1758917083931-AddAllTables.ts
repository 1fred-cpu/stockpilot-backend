import { MigrationInterface, QueryRunner } from "typeorm";

export class AddAllTables1758917083931 implements MigrationInterface {
    name = 'AddAllTables1758917083931'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "store_users" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "store_id" uuid, "user_id" uuid NOT NULL, "business_id" uuid NOT NULL, "email" text NOT NULL, "role" text NOT NULL, "status" text NOT NULL, "assigned_at" TIMESTAMP WITH TIME ZONE NOT NULL, "is_default" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "UQ_665168b23451669e6807610a0fa" UNIQUE ("store_id", "user_id"), CONSTRAINT "PK_6af90d774177332a7a99a7c1c9d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "inventory_logs" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "business_id" uuid NOT NULL, "inventory_id" uuid, "store_id" uuid, "variant_id" uuid, "change" numeric NOT NULL DEFAULT '0', "type" text NOT NULL, "reason" text, "reference" text NOT NULL, "idempotency_key" text NOT NULL, "created_by" uuid, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_06b444680ab11eb7c7d0ed6eced" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "stock_alerts" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "threshold" numeric NOT NULL, "inventory_id" uuid NOT NULL, "business_id" uuid NOT NULL, "store_id" uuid NOT NULL, "status" text NOT NULL, "triggered_at" TIMESTAMP WITH TIME ZONE NOT NULL, "stock_at_trigger" numeric NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_3c3bb550b3bf192460bffe3a55b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "store_inventory" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "business_id" uuid NOT NULL, "store_id" uuid NOT NULL, "variant_id" uuid NOT NULL, "quantity" integer NOT NULL DEFAULT '0', "total_quantity" integer NOT NULL DEFAULT '0', "reserved" integer NOT NULL DEFAULT '0', "low_stock_quantity" integer NOT NULL DEFAULT '0', "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "UQ_7e33028a75b8fdfc433ac5b794f" UNIQUE ("variant_id"), CONSTRAINT "PK_d518ea4316b1bd792bb31166398" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "customers" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "store_id" uuid NOT NULL, "business_id" uuid NOT NULL, "name" text NOT NULL, "email" text, "phone" text, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "UQ_8536b8b85c06969f84f0c098b03" UNIQUE ("email"), CONSTRAINT "UQ_88acd889fbe17d0e16cc4bc9174" UNIQUE ("phone"), CONSTRAINT "PK_133ec679a801fab5e070f73d3ea" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."store_credits_status_enum" AS ENUM('active', 'redeemed', 'expired', 'partially_used', 'pending')`);
        await queryRunner.query(`CREATE TABLE "store_credits" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "customer_id" uuid NOT NULL, "store_id" uuid NOT NULL, "return_id" uuid NOT NULL, "amount" numeric(12,2) NOT NULL, "used_amount" numeric(12,2) NOT NULL DEFAULT '0', "status" "public"."store_credits_status_enum" NOT NULL DEFAULT 'active', "expires_at" TIMESTAMP WITH TIME ZONE, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_68e3a4d96dc51582fe4ce3dd9a3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "exchanges" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "return_id" uuid NOT NULL, "store_id" uuid NOT NULL, "new_product_variant_id" uuid NOT NULL, "price_difference" double precision NOT NULL DEFAULT '0', "status" text NOT NULL DEFAULT 'pending', "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_17ccd29473f939c68de98c2cea3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."returns_resolution_enum" AS ENUM('refund', 'exchange', 'store_credit')`);
        await queryRunner.query(`CREATE TYPE "public"."returns_status_enum" AS ENUM('pending', 'approved', 'rejected', 'refunded', 'exchanged', 'credited')`);
        await queryRunner.query(`CREATE TABLE "returns" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "sale_id" uuid NOT NULL, "store_id" uuid NOT NULL, "sale_item_id" uuid NOT NULL, "reason" text, "resolution" "public"."returns_resolution_enum" NOT NULL DEFAULT 'refund', "status" "public"."returns_status_enum" NOT NULL DEFAULT 'pending', "inspection_notes" text, "quantity" bigint NOT NULL, "staff_id" text, "manager_id" text, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_27a2f1895a71519ebfec7850361" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."refunds_status_enum" AS ENUM('initiated', 'completed', 'failed', 'pending')`);
        await queryRunner.query(`CREATE TABLE "refunds" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "return_id" uuid NOT NULL, "store_id" uuid NOT NULL, "amount" double precision NOT NULL DEFAULT '0', "method" text NOT NULL, "status" "public"."refunds_status_enum" NOT NULL DEFAULT 'initiated', "processed_at" TIMESTAMP WITH TIME ZONE, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "saleId" uuid, CONSTRAINT "PK_5106efb01eeda7e49a78b869738" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "sales" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "store_id" uuid NOT NULL, "business_id" uuid NOT NULL, "customer_id" uuid, "total_amount" double precision NOT NULL, "total_discount" double precision NOT NULL, "total_tax" double precision, "net_amount" double precision NOT NULL, "payment_status" text NOT NULL, "payment_method" text NOT NULL, "customer_email" text, "customer_phone" text, "customer_name" text NOT NULL, "pdf_url" text, "created_by" uuid NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_4f0bc990ae81dba46da680895ea" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "sale_items" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "business_id" uuid NOT NULL, "store_id" uuid NOT NULL, "sale_id" uuid NOT NULL, "variant_id" uuid NOT NULL, "reference" text NOT NULL, "quantity" bigint NOT NULL DEFAULT '0', "unit_price" double precision NOT NULL, "discount" double precision NOT NULL, "total_price" double precision NOT NULL, "status" text, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_5a7dc5b4562a9e590528b3e08ab" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "product_variants" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "product_id" uuid NOT NULL, "name" text NOT NULL, "sku" text NOT NULL, "price" double precision NOT NULL DEFAULT '0', "image_url" text NOT NULL, "store_id" uuid NOT NULL, "business_id" uuid NOT NULL, "tracks_expiry" boolean NOT NULL DEFAULT false, "qrcode_url" text, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_281e3f2c55652d6a22c0aa59fd7" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "products" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "business_id" uuid NOT NULL, "store_id" uuid NOT NULL, "description" text NOT NULL, "name" text NOT NULL, "tags" text array NOT NULL DEFAULT '{}', "brand" text NOT NULL, "slug" text NOT NULL, "thumbnail" text NOT NULL, "category_id" uuid NOT NULL, "category_type" text NOT NULL, "is_bestseller" boolean NOT NULL DEFAULT false, "is_featured" boolean NOT NULL DEFAULT false, "is_trending" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_0806c755e0aca124e67c0cf6d7d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "categories" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "business_id" uuid, "store_id" uuid, "name" text NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_24dbc6126a28ff948da33e97d3b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "invites" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "store_id" uuid, "business_id" uuid, "role" text, "invited_by" text, "expires_at" TIMESTAMP WITH TIME ZONE, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "email" text, CONSTRAINT "PK_aa52e96b44a714372f4dd31a0af" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "stores" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "business_id" uuid NOT NULL, "name" text NOT NULL, "location" text NOT NULL, "address" text, "email" text, "phone" text, "currency" text NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "UQ_4a946bd8ef9834431ade78d639d" UNIQUE ("email"), CONSTRAINT "UQ_5acdba4060a25169c2c792c984e" UNIQUE ("phone"), CONSTRAINT "PK_7aa6e7d71fa7acdd7ca43d7c9cb" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "businesses" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" text NOT NULL, "owner_user_id" uuid NOT NULL, "email" text NOT NULL, "phone" text NOT NULL, "logo_url" text, "website" text, "stripe_customer_id" text, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "UQ_19fedc48aa416c30f3fa1cfb11e" UNIQUE ("owner_user_id"), CONSTRAINT "UQ_ee58c14c74529ea227d8337ab69" UNIQUE ("email"), CONSTRAINT "UQ_4c97d6418764a22bd344d18f501" UNIQUE ("phone"), CONSTRAINT "PK_bc1bf63498dd2368ce3dc8686e8" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "users" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" text NOT NULL, "email" text NOT NULL, "business_id" uuid, "status" text NOT NULL DEFAULT 'active', "auth_provider" text, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "return_policies" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "store_id" uuid NOT NULL, "days_allowed" integer NOT NULL DEFAULT '7', "allow_refund" boolean NOT NULL DEFAULT true, "allow_exchange" boolean NOT NULL DEFAULT true, "allow_store_credit" boolean NOT NULL DEFAULT true, "notes" text, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_1245981b15946d23a9247e174d0" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "failed_file_deletions" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "bucket_name" text NOT NULL, "path" text NOT NULL, "error_message" text, "retry_count" integer NOT NULL DEFAULT '0', "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_0058ed24054eeaedd31b5016fbf" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "store_users" ADD CONSTRAINT "FK_3077a42ec6ad94cfb93f919359d" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "store_users" ADD CONSTRAINT "FK_3e36bad7ef743f579f80167de87" FOREIGN KEY ("business_id") REFERENCES "businesses"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "store_users" ADD CONSTRAINT "FK_d741d647a3ef6419a31592f8ad6" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "inventory_logs" ADD CONSTRAINT "FK_5541d6fb72b583b7e5bf3e3c314" FOREIGN KEY ("business_id") REFERENCES "businesses"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "inventory_logs" ADD CONSTRAINT "FK_5132c139264f494991a44453746" FOREIGN KEY ("variant_id") REFERENCES "product_variants"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "inventory_logs" ADD CONSTRAINT "FK_1608cc9510a9beab02f165ebfee" FOREIGN KEY ("inventory_id") REFERENCES "store_inventory"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "inventory_logs" ADD CONSTRAINT "FK_e2fe6baebaf7cf2c7ec32be4612" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "inventory_logs" ADD CONSTRAINT "FK_faf34db3d34312b52c881eec8c7" FOREIGN KEY ("created_by") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock_alerts" ADD CONSTRAINT "FK_561c22da8b585db420195299f2a" FOREIGN KEY ("business_id") REFERENCES "businesses"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock_alerts" ADD CONSTRAINT "FK_3d55e3335014aba0cbd7a9aded3" FOREIGN KEY ("inventory_id") REFERENCES "store_inventory"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock_alerts" ADD CONSTRAINT "FK_1b2bdff6e236d1fc46addd99141" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "store_inventory" ADD CONSTRAINT "FK_abaa56e4f142b793835ead01a5b" FOREIGN KEY ("business_id") REFERENCES "businesses"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "store_inventory" ADD CONSTRAINT "FK_7e33028a75b8fdfc433ac5b794f" FOREIGN KEY ("variant_id") REFERENCES "product_variants"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "store_inventory" ADD CONSTRAINT "FK_5e68b7ed564877449f5d37e7da9" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "customers" ADD CONSTRAINT "FK_2501b8750977dd4f4d06dfeff07" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "customers" ADD CONSTRAINT "FK_c04b1ab3076e753f96c64318286" FOREIGN KEY ("business_id") REFERENCES "businesses"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "store_credits" ADD CONSTRAINT "FK_7503b09d892aa434d8e221419e4" FOREIGN KEY ("customer_id") REFERENCES "customers"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "store_credits" ADD CONSTRAINT "FK_392d6eba00b6f551c3a91d1155e" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "store_credits" ADD CONSTRAINT "FK_25c86e50fbf1d084f34fccd17cc" FOREIGN KEY ("return_id") REFERENCES "returns"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "exchanges" ADD CONSTRAINT "FK_592e274c7ab3fadf624ebf0e233" FOREIGN KEY ("return_id") REFERENCES "returns"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "exchanges" ADD CONSTRAINT "FK_7939c9d5aced7f8dae351c999bb" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "returns" ADD CONSTRAINT "FK_c804e81f1fc1a339ab4982c0179" FOREIGN KEY ("sale_id") REFERENCES "sales"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "returns" ADD CONSTRAINT "FK_02aef186f5d00d6f968a6b5e07c" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "returns" ADD CONSTRAINT "FK_ec25c9292a1815343d5353baca5" FOREIGN KEY ("sale_item_id") REFERENCES "sale_items"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "refunds" ADD CONSTRAINT "FK_a128f18ec7b8a4ef5d3c6b705c9" FOREIGN KEY ("return_id") REFERENCES "returns"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "refunds" ADD CONSTRAINT "FK_058735f88c1c2971780e7a744ba" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "refunds" ADD CONSTRAINT "FK_0c4485d119bfcdc8d9ba260e02b" FOREIGN KEY ("saleId") REFERENCES "sales"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sales" ADD CONSTRAINT "FK_6c1fae113ae666969a94d79d637" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sales" ADD CONSTRAINT "FK_3f9b4d6fecb2ce2eb0cadba3041" FOREIGN KEY ("business_id") REFERENCES "businesses"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sales" ADD CONSTRAINT "FK_83a12e5e2723eafe9a47c441457" FOREIGN KEY ("created_by") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sale_items" ADD CONSTRAINT "FK_e8c57696a7997afa9fdd6f82d6f" FOREIGN KEY ("business_id") REFERENCES "businesses"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sale_items" ADD CONSTRAINT "FK_f4260e866ece7d3f389681812be" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sale_items" ADD CONSTRAINT "FK_8a27886f7a349f48572087f91da" FOREIGN KEY ("variant_id") REFERENCES "product_variants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sale_items" ADD CONSTRAINT "FK_c210a330b80232c29c2ad68462a" FOREIGN KEY ("sale_id") REFERENCES "sales"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "product_variants" ADD CONSTRAINT "FK_6343513e20e2deab45edfce1316" FOREIGN KEY ("product_id") REFERENCES "products"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "product_variants" ADD CONSTRAINT "FK_d28624aa036041fe185566cfb58" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "product_variants" ADD CONSTRAINT "FK_0d8deb0e0812b6870852984c814" FOREIGN KEY ("business_id") REFERENCES "businesses"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "products" ADD CONSTRAINT "FK_6706ea94d32be01f9272ccc3512" FOREIGN KEY ("business_id") REFERENCES "businesses"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "products" ADD CONSTRAINT "FK_68863607048a1abd43772b314ef" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "products" ADD CONSTRAINT "FK_9a5f6868c96e0069e699f33e124" FOREIGN KEY ("category_id") REFERENCES "categories"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "categories" ADD CONSTRAINT "FK_91da72e2f6ec2a1c45a8f4aaf30" FOREIGN KEY ("business_id") REFERENCES "businesses"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "categories" ADD CONSTRAINT "FK_5848ba82e61b83e2aa416447a15" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invites" ADD CONSTRAINT "FK_47ee8655d8e2509932ef0c9b26e" FOREIGN KEY ("store_id") REFERENCES "stores"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invites" ADD CONSTRAINT "FK_806e37a6a4a21f8c338a6114d5f" FOREIGN KEY ("business_id") REFERENCES "businesses"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stores" ADD CONSTRAINT "FK_7dd84ec09542fd1f9d7c4062167" FOREIGN KEY ("business_id") REFERENCES "businesses"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "FK_cde4b2aabca86cfabdc78b537f0" FOREIGN KEY ("business_id") REFERENCES "businesses"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "FK_cde4b2aabca86cfabdc78b537f0"`);
        await queryRunner.query(`ALTER TABLE "stores" DROP CONSTRAINT "FK_7dd84ec09542fd1f9d7c4062167"`);
        await queryRunner.query(`ALTER TABLE "invites" DROP CONSTRAINT "FK_806e37a6a4a21f8c338a6114d5f"`);
        await queryRunner.query(`ALTER TABLE "invites" DROP CONSTRAINT "FK_47ee8655d8e2509932ef0c9b26e"`);
        await queryRunner.query(`ALTER TABLE "categories" DROP CONSTRAINT "FK_5848ba82e61b83e2aa416447a15"`);
        await queryRunner.query(`ALTER TABLE "categories" DROP CONSTRAINT "FK_91da72e2f6ec2a1c45a8f4aaf30"`);
        await queryRunner.query(`ALTER TABLE "products" DROP CONSTRAINT "FK_9a5f6868c96e0069e699f33e124"`);
        await queryRunner.query(`ALTER TABLE "products" DROP CONSTRAINT "FK_68863607048a1abd43772b314ef"`);
        await queryRunner.query(`ALTER TABLE "products" DROP CONSTRAINT "FK_6706ea94d32be01f9272ccc3512"`);
        await queryRunner.query(`ALTER TABLE "product_variants" DROP CONSTRAINT "FK_0d8deb0e0812b6870852984c814"`);
        await queryRunner.query(`ALTER TABLE "product_variants" DROP CONSTRAINT "FK_d28624aa036041fe185566cfb58"`);
        await queryRunner.query(`ALTER TABLE "product_variants" DROP CONSTRAINT "FK_6343513e20e2deab45edfce1316"`);
        await queryRunner.query(`ALTER TABLE "sale_items" DROP CONSTRAINT "FK_c210a330b80232c29c2ad68462a"`);
        await queryRunner.query(`ALTER TABLE "sale_items" DROP CONSTRAINT "FK_8a27886f7a349f48572087f91da"`);
        await queryRunner.query(`ALTER TABLE "sale_items" DROP CONSTRAINT "FK_f4260e866ece7d3f389681812be"`);
        await queryRunner.query(`ALTER TABLE "sale_items" DROP CONSTRAINT "FK_e8c57696a7997afa9fdd6f82d6f"`);
        await queryRunner.query(`ALTER TABLE "sales" DROP CONSTRAINT "FK_83a12e5e2723eafe9a47c441457"`);
        await queryRunner.query(`ALTER TABLE "sales" DROP CONSTRAINT "FK_3f9b4d6fecb2ce2eb0cadba3041"`);
        await queryRunner.query(`ALTER TABLE "sales" DROP CONSTRAINT "FK_6c1fae113ae666969a94d79d637"`);
        await queryRunner.query(`ALTER TABLE "refunds" DROP CONSTRAINT "FK_0c4485d119bfcdc8d9ba260e02b"`);
        await queryRunner.query(`ALTER TABLE "refunds" DROP CONSTRAINT "FK_058735f88c1c2971780e7a744ba"`);
        await queryRunner.query(`ALTER TABLE "refunds" DROP CONSTRAINT "FK_a128f18ec7b8a4ef5d3c6b705c9"`);
        await queryRunner.query(`ALTER TABLE "returns" DROP CONSTRAINT "FK_ec25c9292a1815343d5353baca5"`);
        await queryRunner.query(`ALTER TABLE "returns" DROP CONSTRAINT "FK_02aef186f5d00d6f968a6b5e07c"`);
        await queryRunner.query(`ALTER TABLE "returns" DROP CONSTRAINT "FK_c804e81f1fc1a339ab4982c0179"`);
        await queryRunner.query(`ALTER TABLE "exchanges" DROP CONSTRAINT "FK_7939c9d5aced7f8dae351c999bb"`);
        await queryRunner.query(`ALTER TABLE "exchanges" DROP CONSTRAINT "FK_592e274c7ab3fadf624ebf0e233"`);
        await queryRunner.query(`ALTER TABLE "store_credits" DROP CONSTRAINT "FK_25c86e50fbf1d084f34fccd17cc"`);
        await queryRunner.query(`ALTER TABLE "store_credits" DROP CONSTRAINT "FK_392d6eba00b6f551c3a91d1155e"`);
        await queryRunner.query(`ALTER TABLE "store_credits" DROP CONSTRAINT "FK_7503b09d892aa434d8e221419e4"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP CONSTRAINT "FK_c04b1ab3076e753f96c64318286"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP CONSTRAINT "FK_2501b8750977dd4f4d06dfeff07"`);
        await queryRunner.query(`ALTER TABLE "store_inventory" DROP CONSTRAINT "FK_5e68b7ed564877449f5d37e7da9"`);
        await queryRunner.query(`ALTER TABLE "store_inventory" DROP CONSTRAINT "FK_7e33028a75b8fdfc433ac5b794f"`);
        await queryRunner.query(`ALTER TABLE "store_inventory" DROP CONSTRAINT "FK_abaa56e4f142b793835ead01a5b"`);
        await queryRunner.query(`ALTER TABLE "stock_alerts" DROP CONSTRAINT "FK_1b2bdff6e236d1fc46addd99141"`);
        await queryRunner.query(`ALTER TABLE "stock_alerts" DROP CONSTRAINT "FK_3d55e3335014aba0cbd7a9aded3"`);
        await queryRunner.query(`ALTER TABLE "stock_alerts" DROP CONSTRAINT "FK_561c22da8b585db420195299f2a"`);
        await queryRunner.query(`ALTER TABLE "inventory_logs" DROP CONSTRAINT "FK_faf34db3d34312b52c881eec8c7"`);
        await queryRunner.query(`ALTER TABLE "inventory_logs" DROP CONSTRAINT "FK_e2fe6baebaf7cf2c7ec32be4612"`);
        await queryRunner.query(`ALTER TABLE "inventory_logs" DROP CONSTRAINT "FK_1608cc9510a9beab02f165ebfee"`);
        await queryRunner.query(`ALTER TABLE "inventory_logs" DROP CONSTRAINT "FK_5132c139264f494991a44453746"`);
        await queryRunner.query(`ALTER TABLE "inventory_logs" DROP CONSTRAINT "FK_5541d6fb72b583b7e5bf3e3c314"`);
        await queryRunner.query(`ALTER TABLE "store_users" DROP CONSTRAINT "FK_d741d647a3ef6419a31592f8ad6"`);
        await queryRunner.query(`ALTER TABLE "store_users" DROP CONSTRAINT "FK_3e36bad7ef743f579f80167de87"`);
        await queryRunner.query(`ALTER TABLE "store_users" DROP CONSTRAINT "FK_3077a42ec6ad94cfb93f919359d"`);
        await queryRunner.query(`DROP TABLE "failed_file_deletions"`);
        await queryRunner.query(`DROP TABLE "return_policies"`);
        await queryRunner.query(`DROP TABLE "users"`);
        await queryRunner.query(`DROP TABLE "businesses"`);
        await queryRunner.query(`DROP TABLE "stores"`);
        await queryRunner.query(`DROP TABLE "invites"`);
        await queryRunner.query(`DROP TABLE "categories"`);
        await queryRunner.query(`DROP TABLE "products"`);
        await queryRunner.query(`DROP TABLE "product_variants"`);
        await queryRunner.query(`DROP TABLE "sale_items"`);
        await queryRunner.query(`DROP TABLE "sales"`);
        await queryRunner.query(`DROP TABLE "refunds"`);
        await queryRunner.query(`DROP TYPE "public"."refunds_status_enum"`);
        await queryRunner.query(`DROP TABLE "returns"`);
        await queryRunner.query(`DROP TYPE "public"."returns_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."returns_resolution_enum"`);
        await queryRunner.query(`DROP TABLE "exchanges"`);
        await queryRunner.query(`DROP TABLE "store_credits"`);
        await queryRunner.query(`DROP TYPE "public"."store_credits_status_enum"`);
        await queryRunner.query(`DROP TABLE "customers"`);
        await queryRunner.query(`DROP TABLE "store_inventory"`);
        await queryRunner.query(`DROP TABLE "stock_alerts"`);
        await queryRunner.query(`DROP TABLE "inventory_logs"`);
        await queryRunner.query(`DROP TABLE "store_users"`);
    }

}
